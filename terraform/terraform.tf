
provider "aws" {
  region = var.region
}

terraform {
  backend "s3" {
    bucket = "persepolis-terraform-backend"
    region = "us-east-1"
  }
}

resource "aws_api_gateway_rest_api" "vuln_api" {
  name        = "VulnAPI"
  description = "This is my API for demonstration purposes"
}


resource "aws_lambda_function" "lambda" {
  function_name = "${var.prefix}-${var.lambda_function_name}"
  filename = var.lambda_filename
  handler = var.lambda_function_name
  runtime = var.lambda_runtime
  role = aws_iam_role.lambda_role.arn

  environment {
    variables = merge(var.lambda_environmental_variables, {region: data.aws_region.current.name})
  }
}



resource "aws_iam_role" "lambda_role" {
  name = "${var.prefix}-${var.lambda_function_name}"
  assume_role_policy = file("${path.module}/${var.lambda_assume_role_policy}")
}

resource "aws_iam_role_policy" "lambda_policy" {
  name = "${var.prefix}-${var.lambda_policy_name}"
  role = aws_iam_role.lambda_role.id
  policy = data.template_file.lambda_policy_template.rendered
}

data "template_file" "lambda_policy_template" {
  template = file(var.lambda_policy_template)
  vars = var.lambda_policy_variables
}

data "aws_region" "current" {}