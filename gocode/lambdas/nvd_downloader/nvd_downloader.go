package main

import (
	"github.com/aws/aws-lambda-go/lambda"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/dynamodb"
	"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbattribute"
	"log"
	"os"
)

const NVD_URL_HASH_KEY = "nvd_urls"

type NvdUrls struct {
	HashKey string `json:"hash_key"`
	Urls    []Url
}

type Url struct {
	Endpoint string `json:"endpoint"`
	Url      string `json:"url"`
}

func show() {
	urlTable := os.Getenv("VULN_URL_TABLE")

	sess := session.Must(session.NewSessionWithOptions(session.Options{
		SharedConfigState: session.SharedConfigEnable,
	}))
	svc := dynamodb.New(sess)
	result, err := svc.GetItem(&dynamodb.GetItemInput{
		TableName: aws.String(urlTable),
		Key: map[string]*dynamodb.AttributeValue{
			"hash_key": {
				S: aws.String(NVD_URL_HASH_KEY),
			},
		},
	})
	if err != nil {
		log.Printf("Error getting nvd_urls from dynamodb: %v+", err)
		return
	}
	urls := NvdUrls{}
	err = dynamodbattribute.UnmarshalMap(result.Item, &urls)
	if err != nil {
		log.Printf("Error getting nvd_urls from dynamodb: %v+", err)
		return
	}
	for _, v := range (urls.Urls) {
		log.Printf("%+v", v)
	}
	return

}

func main() {
	lambda.Start(show)

}
